"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[7260],{3905:(t,e,a)=>{a.d(e,{Zo:()=>s,kt:()=>g});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)a=i[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var u=n.createContext({}),d=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},s=function(t){var e=d(t.components);return n.createElement(u.Provider,{value:e},t.children)},m="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,i=t.originalType,u=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),m=d(a),p=r,g=m["".concat(u,".").concat(p)]||m[p]||c[p]||i;return a?n.createElement(g,l(l({ref:e},s),{},{components:a})):n.createElement(g,l({ref:e},s))}));function g(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=a.length,l=new Array(i);l[0]=p;var o={};for(var u in e)hasOwnProperty.call(e,u)&&(o[u]=e[u]);o.originalType=t,o[m]="string"==typeof t?t:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},3197:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));const i={},l="Mini_core_tile MAS",o={unversionedId:"fabric/MAS_fabric/mas_mini_core_tile",id:"fabric/MAS_fabric/mas_mini_core_tile",title:"Mini_core_tile MAS",description:"1. Overview",source:"@site/docs/fabric/MAS_fabric/mas_mini_core_tile.md",sourceDirName:"fabric/MAS_fabric",slug:"/fabric/MAS_fabric/mas_mini_core_tile",permalink:"/fpga_mafia_wiki/docs/fabric/MAS_fabric/mas_mini_core_tile",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/fabric/MAS_fabric/mas_mini_core_tile.md",tags:[],version:"current",frontMatter:{},sidebar:"Fabric",previous:{title:"Fabric MAS",permalink:"/fpga_mafia_wiki/docs/fabric/MAS_fabric/"},next:{title:"Router Intro",permalink:"/fpga_mafia_wiki/docs/fabric/MAS_router/mas_intro"}},u={},d=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Block Diagram",id:"2-block-diagram",level:2},{value:"3. Interfaces",id:"3-interfaces",level:2},{value:"North Interface",id:"north-interface",level:2},{value:"East Interface",id:"east-interface",level:2},{value:"West Interface",id:"west-interface",level:2},{value:"South Interface",id:"south-interface",level:2},{value:"Local Interface",id:"local-interface",level:2},{value:"4. Functional Description",id:"4-functional-description",level:2},{value:"5. Configuration and Control",id:"5-configuration-and-control",level:2},{value:"6. Testing and Verification",id:"6-testing-and-verification",level:2}],s={toc:d},m="wrapper";function c(t){let{components:e,...i}=t;return(0,r.kt)(m,(0,n.Z)({},s,i,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mini_core_tile-mas"},"Mini_core_tile MAS"),(0,r.kt)("h2",{id:"1-overview"},"1. Overview"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Brief Description:"),"\nThis document outlines the micro-architecture of the ",(0,r.kt)("inlineCode",{parentName:"p"},"mini_core_tile")," module, which serves as a tile within a tile-based system. It manages data communication with neighboring tiles in multiple directions (North, East, West, South) and includes a local interface."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Purpose and Functionality:"),"\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"mini_core_tile")," module facilitates inter-tile communication and routing of data within a tile-based system. It supports UART communication, interfaces with neighboring tiles, and includes a local interface for communication with the mini core."),(0,r.kt)("h2",{id:"2-block-diagram"},"2. Block Diagram"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"mini_core_tile",src:a(8241).Z,width:"622",height:"568"})),(0,r.kt)("h2",{id:"3-interfaces"},"3. Interfaces"),(0,r.kt)("h2",{id:"north-interface"},"North Interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_north_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of incoming North requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_north_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Incoming North requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_north_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for incoming North requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_north_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of outgoing North requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_north_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing North requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_north_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for outgoing North requests.")))),(0,r.kt)("h2",{id:"east-interface"},"East Interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_east_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of incoming East requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_east_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Incoming East requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_east_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for incoming East requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_east_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of outgoing East requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_east_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing East requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_east_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for outgoing East requests.")))),(0,r.kt)("h2",{id:"west-interface"},"West Interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_west_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of incoming West requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_west_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Incoming West requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_west_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for incoming West requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_west_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of outgoing West requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_west_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing West requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_west_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for outgoing West requests.")))),(0,r.kt)("h2",{id:"south-interface"},"South Interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_south_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of incoming South requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_south_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Incoming South requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_south_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for incoming South requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_south_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of outgoing South requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_south_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing South requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_south_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for outgoing South requests.")))),(0,r.kt)("h2",{id:"local-interface"},"Local Interface"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Signal Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_local_req_valid"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of incoming local requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_local_req"),(0,r.kt)("td",{parentName:"tr",align:null},"Incoming local requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"in_local_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for incoming local requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OutFabricValidQ505H"),(0,r.kt)("td",{parentName:"tr",align:null},"Validity of outgoing local requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"OutFabricQ505H"),(0,r.kt)("td",{parentName:"tr",align:null},"Outgoing local requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"out_local_ready"),(0,r.kt)("td",{parentName:"tr",align:null},"Ready signal for outgoing local requests.")))),(0,r.kt)("h2",{id:"4-functional-description"},"4. Functional Description"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Operational Modes:"),"\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"mini_core_tile")," module operates in a single mode, facilitating data routing and communication with neighboring tiles."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Data Flow Description:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The module receives clock (",(0,r.kt)("inlineCode",{parentName:"li"},"clk"),") and reset (",(0,r.kt)("inlineCode",{parentName:"li"},"rst"),") signals for control."),(0,r.kt)("li",{parentName:"ol"},"It manages data communication in all four cardinal directions (North, East, West, South) with neighboring tiles using the specified input and output signals."),(0,r.kt)("li",{parentName:"ol"},"Local requests are received and processed via the ",(0,r.kt)("inlineCode",{parentName:"li"},"in_local_req_valid"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"in_local_req"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"in_local_ready")," signals."),(0,r.kt)("li",{parentName:"ol"},"It interfaces with the ",(0,r.kt)("inlineCode",{parentName:"li"},"router")," module for routing data between directions.")),(0,r.kt)("h2",{id:"5-configuration-and-control"},"5. Configuration and Control"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Configuration Registers:"),"\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"mini_core_tile")," module does not include explicit configuration registers. Configuration and control may be implemented at a higher system level."),(0,r.kt)("h2",{id:"6-testing-and-verification"},"6. Testing and Verification"),(0,r.kt)("p",null,"Specify details about testing and verification procedures in the verification sidebar."))}c.isMDXComponent=!0},8241:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/images/mini_core_tile-7e045cea0004a59e7667f53e236ea165.jpg"}}]);