"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[8229],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||i;return n?a.createElement(d,o(o({ref:t},c),{},{components:n})):a.createElement(d,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6747:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={},o=void 0,l={unversionedId:"TFM/projectTool/bashrc",id:"TFM/projectTool/bashrc",title:"bashrc",description:"~/.bashrc file is like a user's personal command line settings file in Linux. It's used to:",source:"@site/docs/TFM/projectTool/bashrc.md",sourceDirName:"TFM/projectTool",slug:"/TFM/projectTool/bashrc",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/bashrc",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/TFM/projectTool/bashrc.md",tags:[],version:"current",frontMatter:{},sidebar:"TFM",previous:{title:"GitBash",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/GitBash"},next:{title:"extensions",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/extensions"}},s={},p=[{value:"Seting bashrc",id:"seting-bashrc",level:2},{value:"lets play with the file (optional)",id:"lets-play-with-the-file-optional",level:3},{value:"This is how a regular bashrc file might look",id:"this-is-how-a-regular-bashrc-file-might-look",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," file is like a user's personal command line settings file in Linux. It's used to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Customize the command line environment.  "),(0,r.kt)("li",{parentName:"ul"},"Define shortcuts (aliases) for commands.  "),(0,r.kt)("li",{parentName:"ul"},"Set up the appearance of the command prompt.  "),(0,r.kt)("li",{parentName:"ul"},"Run specific commands when you log in.  "),(0,r.kt)("li",{parentName:"ul"},"Adjust how the Bash shell behaves for that user.  "),(0,r.kt)("li",{parentName:"ul"},"It's all about making the command line work the way you want it to for your user account.")),(0,r.kt)("p",null,"Because we're using Windows, and the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," file is meant for Linux, it might seem unnecessary to add it. However, here's why we still install it: We're using GitBash, which acts like a Linux terminal. When we open GitBash, it reads the ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," file, so having it installed helps configure our GitBash environment."),(0,r.kt)("h2",{id:"seting-bashrc"},"Seting bashrc"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"touch ~/.bashrc\n")),(0,r.kt)("p",null,"In the first line, we're making a file by using ",(0,r.kt)("inlineCode",{parentName:"p"},"touch")," command. The tilde (~) means it's in the home directory, and the dot (.) before the filename means it's hidden.",(0,r.kt)("br",{parentName:"p"}),"\n","You can find the created file by typing the following cmd in GitBash terminal"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"ls -a\n")),(0,r.kt)("h3",{id:"lets-play-with-the-file-optional"},"lets play with the file (optional)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"open ",(0,r.kt)("inlineCode",{parentName:"li"},"/.bashrc")," at your default editor "),(0,r.kt)("li",{parentName:"ul"},"add ",(0,r.kt)("inlineCode",{parentName:"li"},'alias my_cmd="pwd"')," to the file (do not add any spaces near equal(=) sign)"),(0,r.kt)("li",{parentName:"ul"},"go to terminal and type ",(0,r.kt)("inlineCode",{parentName:"li"},"source ~/.bashrc")),(0,r.kt)("li",{parentName:"ul"},"type in terminal ",(0,r.kt)("inlineCode",{parentName:"li"},"my_cmd"),", Take a look and find out what's going on")),(0,r.kt)("p",null,"This is just one of the many powerful things you can do with that file.",(0,r.kt)("br",{parentName:"p"}),"\n","Now, you can move to the next section, we will comeback to that file in the future."),(0,r.kt)("h2",{id:"this-is-how-a-regular-bashrc-file-might-look"},"This is how a regular bashrc file might look"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"bashrc.png",src:n(8661).Z,width:"1050",height:"443"})),(0,r.kt)("p",null,"You don't need to have all this lines, and in many cases everything will work even if the file is empty.",(0,r.kt)("br",{parentName:"p"}),"\n","Let's look at the different parts of this file:   "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"PATH"),": In this section, you can find all the important paths your computer needs. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ALIASING"),": Here, you can find some handy shortcuts called aliases. We'll talk about them later. Just remember, aliases make typing easier, but you can work without them."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SHELL CUSTUMIZATION"),": This is a cool feature that adds 'git bash + your current directory + branch name' to your command prompt. You can copy that line and ask ",(0,r.kt)("a",{parentName:"p",href:"https://chat.openai.com/"},"ChatGPT"),' if you want more details."'),(0,r.kt)("p",null,"Here we supply the content of the given ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," file for your personal use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'##################### \n###     PATH      ###\n#####################\nexport PATH=$PATH:/c/Users/roman/AppData/Roaming/xPacks/xpack-riscv-none-embed-gcc/bin/        # riscv gcc\nexport PATH=$PATH:/c/Users/roman/AppData/Local/Programs/Python/Python311-32                    # python\nexport PATH=$PATH:/c/Users/roman/AppData/Roaming/npm                                           # npm\nexport PATH=$PATH:/c/Users/roman/AppData/Roaming/npm/node_modules/docusaurus/node_modules/.bin # docusaurus\nexport PATH=$PATH:/c/intelFPGA_lite/20.1/quartus/bin64/                                        # quartus prime                        \n\n\n##################### \n###   ALIASING    ###\n#####################\nalias gcc="riscv-none-embed-gcc"\nalias run_all="./build.py -dut big_core -test alive -app -hw -sim -gui"\n\n\n############################# \n###  SHELL CUSTUMIZATION  ###\n#############################\nPS1=\'\\[\\033[01;32m\\]git_bash @ \\[\\033[01;31m\\]\\W\\[\\033[01;33m\\]$(__git_ps1 " (%s)")\\[\\033[01;32m\\]> \\[\\033[00m\\]\'\n\n')))}m.isMDXComponent=!0},8661:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/bashrc-22b021a1a037998cb464af505da4fce5.png"}}]);