"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9251],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},s=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=p(r),m=o,d=u["".concat(l,".").concat(m)]||u[m]||f[m]||i;return r?n.createElement(d,c(c({ref:t},s),{},{components:r})):n.createElement(d,c({ref:t},s))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[u]="string"==typeof e?e:o,c[1]=a;for(var p=2;p<i;p++)c[p]=r[p];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},72:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const i={},c=void 0,a={unversionedId:"TFM/projectTool/gcc_intro",id:"TFM/projectTool/gcc_intro",title:"gcc_intro",description:"RISCV GCC",source:"@site/docs/TFM/projectTool/gcc_intro.md",sourceDirName:"TFM/projectTool",slug:"/TFM/projectTool/gcc_intro",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/gcc_intro",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/TFM/projectTool/gcc_intro.md",tags:[],version:"current",frontMatter:{},sidebar:"TFM",previous:{title:"quartus_gui",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/quartus_gui"},next:{title:"GccRiscV",permalink:"/fpga_mafia_wiki/docs/TFM/projectTool/GccRiscV"}},l={},p=[{value:"RISCV GCC",id:"riscv-gcc",level:3}],s={toc:p},u="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"riscv-gcc"},"RISCV GCC"),(0,o.kt)("p",null,"To be able to run programs on our proprietary RISCV CPU implementation, we need to create the executable files such as the ",(0,o.kt)("inlineCode",{parentName:"p"},"elf")," files.",(0,o.kt)("br",{parentName:"p"}),"\n","This is done by using the RISCV GCC compiler.",(0,o.kt)("br",{parentName:"p"}),"\n","The RISC GCC compiler input are the C source files, crt0.s, and linker script. The output is the ",(0,o.kt)("inlineCode",{parentName:"p"},"elf")," file.",(0,o.kt)("br",{parentName:"p"}),"\n","The crt0.s file is the C runtime file that is used to initialize the C runtime environment.",(0,o.kt)("br",{parentName:"p"}),"\n","The linker script is used to define the memory layout of the executable file and link the crt0.s file with the C source files."))}f.isMDXComponent=!0}}]);