"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[9479],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(n),p=r,b=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return n?a.createElement(b,o(o({ref:t},u),{},{components:n})):a.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6725:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={},o="HW elaboration and simulation",l={unversionedId:"build_script/HW_elab_simulate",id:"build_script/HW_elab_simulate",title:"HW elaboration and simulation",description:"Elaboration creates a hierarchical representation of the design by connecting modules and resolving dependencies between them.",source:"@site/docs/build_script/HW_elab_simulate.md",sourceDirName:"build_script",slug:"/build_script/HW_elab_simulate",permalink:"/fpga_mafia_wiki/docs/build_script/HW_elab_simulate",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/build_script/HW_elab_simulate.md",tags:[],version:"current",frontMatter:{},sidebar:"MAFIA_Build",previous:{title:"HW Compilation",permalink:"/fpga_mafia_wiki/docs/build_script/HW_compile"},next:{title:"advanced build options",permalink:"/fpga_mafia_wiki/docs/build_script/advanced_build_options"}},s={},c=[{value:"Background of elaboration and simulation command",id:"background-of-elaboration-and-simulation-command",level:3}],u={toc:c},m="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hw-elaboration-and-simulation"},"HW elaboration and simulation"),(0,r.kt)("p",null,"Elaboration creates a hierarchical representation of the design by connecting modules and resolving dependencies between them."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Common elaboration errors:")),(0,r.kt)("p",null,"System Verilog elaboration error involving an undeclared signal while instantiating a module\nSuppose you have two System Verilog modules, ModuleA and ModuleB, and you want to instantiate ModuleB within ModuleA. However, you accidentally misspell the module name when instantiating it\nand many more..."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Please type the following command in the terminal to elaborate and simulate using the test bench located in ",(0,r.kt)("inlineCode",{parentName:"li"},"verif/mini_core/tb/mini_core_tb.sv"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./build.py -dut mini_core -test basics -sim\n")),(0,r.kt)("p",null,"If you receive the message 'Test passed,' it means everything is okay. "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Tip : We recommend you to use the whole command and always include the previous flags to do all the necessary steps from the beginning, for example:",(0,r.kt)("br",{parentName:"li"}),(0,r.kt)("inlineCode",{parentName:"li"},"./build.py -dut mini_core -test basics -app -hw -sim")," command.  ")),(0,r.kt)("h3",{id:"background-of-elaboration-and-simulation-command"},"Background of elaboration and simulation command"),(0,r.kt)("p",null,"In this section, we will outline the commands that run in the background when you use the",(0,r.kt)("br",{parentName:"p"}),"\n","",(0,r.kt)("inlineCode",{parentName:"p"},"./build.py -dut mini_core -test basics -sim")," command.   "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'rm -rf target/mini_core/tests/basics/*.log \n\ncd ./target/mini_core/modelsim/\n\nvsim.exe work.mini_core_tb -c -do "run -all"   +STRING=basics\n\ncd C:/workspace/fpga_mafia\n\n')))}d.isMDXComponent=!0}}]);