"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[7390],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},f=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,f=i(e,["components","mdxType","originalType","parentName"]),l=s(n),m=a,y=l["".concat(p,".").concat(m)]||l[m]||u[m]||o;return n?r.createElement(y,c(c({ref:t},f),{},{components:n})):r.createElement(y,c({ref:t},f))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7595:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={},c=void 0,i={unversionedId:"fpga/snake_game/connect_joystick",id:"fpga/snake_game/connect_joystick",title:"connect_joystick",description:"",source:"@site/docs/fpga/snake_game/connect_joystick.md",sourceDirName:"fpga/snake_game",slug:"/fpga/snake_game/connect_joystick",permalink:"/fpga_mafia_wiki/docs/fpga/snake_game/connect_joystick",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/fpga/snake_game/connect_joystick.md",tags:[],version:"current",frontMatter:{},sidebar:"FPGA",previous:{title:"connect_uart",permalink:"/fpga_mafia_wiki/docs/fpga/snake_game/connect_uart"},next:{title:"compile",permalink:"/fpga_mafia_wiki/docs/fpga/snake_game/compile"}},p={},s=[],f={toc:s},l="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}))}u.isMDXComponent=!0}}]);