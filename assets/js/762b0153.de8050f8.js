"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[7819],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var _=r.createContext({}),l=function(t){var e=r.useContext(_),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=l(t.components);return r.createElement(_.Provider,{value:e},t.children)},m="mdxType",s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},p=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,_=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),m=l(n),p=a,d=m["".concat(_,".").concat(p)]||m[p]||s[p]||i;return n?r.createElement(d,o(o({ref:e},u),{},{components:n})):r.createElement(d,o({ref:e},u))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,o=new Array(i);o[0]=p;var c={};for(var _ in e)hasOwnProperty.call(e,_)&&(c[_]=e[_]);c.originalType=t,c[m]="string"==typeof t?t:a,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4551:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>_,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={},o="wb",c={unversionedId:"rvc/common/wb",id:"rvc/common/wb",title:"wb",description:"write back stage",source:"@site/docs/rvc/common/wb.md",sourceDirName:"rvc/common",slug:"/rvc/common/wb",permalink:"/fpga_mafia_wiki/docs/rvc/common/wb",draft:!1,editUrl:"https://github.com/FPGA-MAFIA/fpga_mafia_wiki/tree/main/docs/rvc/common/wb.md",tags:[],version:"current",frontMatter:{},sidebar:"RISCV_Cores",previous:{title:"mem_acs",permalink:"/fpga_mafia_wiki/docs/rvc/common/mem_acs"},next:{title:"ctrl",permalink:"/fpga_mafia_wiki/docs/rvc/common/ctrl"}},_={},l=[{value:"write back stage",id:"write-back-stage",level:2},{value:"instantiation of mini_core_wb module in mini_core.sv",id:"instantiation-of-mini_core_wb-module-in-mini_coresv",level:3},{value:"mini_core_wb.sv module",id:"mini_core_wbsv-module",level:3},{value:"mini_core_wb abstract diagram",id:"mini_core_wb-abstract-diagram",level:3}],u={toc:l},m="wrapper";function s(t){let{components:e,...i}=t;return(0,a.kt)(m,(0,r.Z)({},u,i,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"wb"},"wb"),(0,a.kt)("h2",{id:"write-back-stage"},"write back stage"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The goal of that stage is to Select which data should be written back to the register file AluOut or DMemRdData.")),(0,a.kt)("h3",{id:"instantiation-of-mini_core_wb-module-in-mini_coresv"},"instantiation of mini_core_wb module in mini_core.sv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"//////////////////////////////////////////////////////////////////////////////////////////////////\n//    ____  __     __   _____   _        ______          ____    __    ___    _  _     _    _ \n//  / ____| \\ \\   / /  / ____| | |      |  ____|        / __ \\  /_ |  / _ \\  | || |   | |  | |\n// | |       \\ \\_/ /  | |      | |      | |__          | |  | |  | | | | | | | || |_  | |__| |\n// | |        \\   /   | |      | |      |  __|         | |  | |  | | | | | | |__   _| |  __  |\n// | |____     | |    | |____  | |____  | |____        | |__| |  | | | |_| |    | |   | |  | |\n//  \\_____|    |_|     \\_____| |______| |______|        \\___\\_\\  |_|  \\___/     |_|   |_|  |_|\n//\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// Write-Back\n// -----------------\n// 1. Select which data should be written back to the register file AluOut or DMemRdData.\n//////////////////////////////////////////////////////////////////////////////////////////////////\nmini_core_wb mini_core_wb\n( \n .Clock     (Clock ), // input  logic           Clock,       //input \n .Rst       (Rst   ), // input  logic           Rst,         //input  \n // Ctrl\n .Ctrl      (CtrlWb),  // input var  t_ctrl_wb       Ctrl  //input\n // Data path input\n .DMemRdDataQ104H (DMemRdRspQ104H ), // input  logic [31:0]    DMemRdDataQ104H, //input\n .AluOutQ104H     (AluOutQ104H     ), // input  logic [31:0]    AluOutQ104H,     //input\n .PcPlus4Q104H    (PcPlus4Q104H    ), // input  logic [31:0]    PcPlus4Q104H,    //input\n // data path output\n .RegWrDataQ104H  (RegWrDataQ104H  )  // output logic [31:0]    RegWrDataQ104H  //output\n")),(0,a.kt)("h3",{id:"mini_core_wbsv-module"},"mini_core_wb.sv module"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"//-----------------------------------------------------------------------------\n// Title            : \n// Project          : mafia_asap\n//-----------------------------------------------------------------------------\n// File             : \n// Original Author  : Amichai Ben-David\n// Code Owner       : \n// Adviser          : Amichai Ben-David\n// Created          : 7/2023\n//-----------------------------------------------------------------------------\n\n`include \"macros.sv\"\n\nmodule mini_core_wb\nimport common_pkg::*;\n( input  logic           Clock,       //input \n  input  logic           Rst,         //input  \n  // Ctrl\n  input var  t_ctrl_wb       Ctrl, //input\n  // Data path input\n  input  logic [31:0]    DMemRdDataQ104H, //input\n  input  logic [31:0]    AluOutQ104H,     //input\n  input  logic [31:0]    PcPlus4Q104H,    //input\n  // data path output\n  output logic [31:0]    RegWrDataQ104H  //output\n\n);\n\nlogic [31:0] PostSxDMemRdDataQ104H;\n// Sign extend taking care of\nassign PostSxDMemRdDataQ104H[7:0]   =  Ctrl.ByteEnQ104H[0] ? DMemRdDataQ104H[7:0]          : 8'b0;\nassign PostSxDMemRdDataQ104H[15:8]  =  Ctrl.ByteEnQ104H[1] ? DMemRdDataQ104H[15:8]         :\n                                       Ctrl.SignExtQ104H   ? {8{PostSxDMemRdDataQ104H[7]}} : 8'b0;\nassign PostSxDMemRdDataQ104H[23:16] =  Ctrl.ByteEnQ104H[2] ? DMemRdDataQ104H[23:16]        :\n                                       Ctrl.SignExtQ104H   ? {8{PostSxDMemRdDataQ104H[15]}}: 8'b0;\nassign PostSxDMemRdDataQ104H[31:24] =  Ctrl.ByteEnQ104H[3] ? DMemRdDataQ104H[31:24]        :\n                                       Ctrl.SignExtQ104H   ? {8{PostSxDMemRdDataQ104H[23]}}: 8'b0;\n\n// ---- Select what write to the register file ----\nassign RegWrDataQ104H = (Ctrl.e_SelWrBackQ104H == WB_DMEM) ? PostSxDMemRdDataQ104H : // TODO - CHCK THIS ENUM\n                        (Ctrl.e_SelWrBackQ104H == WB_ALU)  ? AluOutQ104H           :\n                        (Ctrl.e_SelWrBackQ104H == WB_PC4)  ? PcPlus4Q104H          : \n                                                           32'b0;\nendmodule\n")),(0,a.kt)("h3",{id:"mini_core_wb-abstract-diagram"},"mini_core_wb abstract diagram"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"---------------------------------------------------------------------------------------------------------------------------------------"),"\n",(0,a.kt)("img",{alt:"wb",src:n(6017).Z,width:"1437",height:"703"}),"\n",(0,a.kt)("strong",{parentName:"p"},"---------------------------------------------------------------------------------------------------------------------------------------")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Please note that the above implementation behaves correctly but the real hardware implementation can be changed depending on the synthesis tool you use.")))}s.isMDXComponent=!0},6017:(t,e,n)=>{n.d(e,{Z:()=>r});const r=n.p+"assets/images/wb-7c788e1086521c9b714bf8ee68e07079.jpg"}}]);