"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[4195,8092],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>f});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=s(a),d=r,f=p["".concat(c,".").concat(d)]||p[d]||m[d]||i;return a?n.createElement(f,l(l({ref:t},u),{},{components:a})):n.createElement(f,l({ref:t},u))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8638:(e,t,a)=>{a.r(t),a.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var n=a(7462),r=(a(7294),a(3905));const i={},l="Welcome to the MAFIA Project",o={type:"mdx",permalink:"/fpga_mafia_wiki/HomePage_content",source:"@site/src/pages/HomePage_content.mdx",title:"Welcome to the MAFIA Project",description:"MAFIA:  Multi-Agent-Fabric-Integration-Architecture",frontMatter:{}},c=[{value:"Project Overview",id:"project-overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Functionality includes",id:"functionality-includes",level:2},{value:"Technology Stack",id:"technology-stack",level:3},{value:"Main Components",id:"main-components",level:3},{value:"Software Stack to run on SoC",id:"software-stack-to-run-on-soc",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisite",id:"prerequisite",level:2},{value:"Inspiration Behind the Project",id:"inspiration-behind-the-project",level:3},{value:"Stay Tuned for Updates!",id:"stay-tuned-for-updates",level:2}],s={toc:c},u="wrapper";function p(e){let{components:t,...a}=e;return(0,r.kt)(u,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"welcome-to-the-mafia-project"},"Welcome to the MAFIA Project"),(0,r.kt)("p",null,"MAFIA:  Multi-Agent-Fabric-Integration-Architecture",(0,r.kt)("br",{parentName:"p"}),"\n","An initiative aimed at designing a System-on-a-Chip (SoC) Tile-based mesh fabric.  "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/81047407/218485725-d4442e94-7129-48b9-92bb-8f2ce52a301c.png",alt:"Project Image"})),(0,r.kt)("h2",{id:"project-overview"},"Project Overview"),(0,r.kt)("p",null,"The MAFIA Project is developed by final year Electrical and Computer Engineering students at Bar-Ilan University and the Technion in Israel."),(0,r.kt)("h2",{id:"key-features"},"Key Features"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Acceleration of distributed workloads, particularly beneficial for AI inference and learning.  "),(0,r.kt)("li",{parentName:"ul"},"Traditional program acceleration by utilizing a pipelining approach.  "),(0,r.kt)("li",{parentName:"ul"},"This SoC design provides a robust platform for versatile tasks, offering improved speed and efficiency  ")),(0,r.kt)("h2",{id:"functionality-includes"},"Functionality includes"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RISCV mini-cores and big-cores"),(0,r.kt)("li",{parentName:"ul"},"Hardware accelerators"),(0,r.kt)("li",{parentName:"ul"},"IO devices such as UART, keyboard, VGA, and DE10-Lite FPGA IO")),(0,r.kt)("h3",{id:"technology-stack"},"Technology Stack"),(0,r.kt)("p",null,"The project's RTL is written in SystemVerilog.",(0,r.kt)("br",{parentName:"p"}),"\n","We utilize the GNU GCC for the RISCV software stack, which includes linker, assembly, and C source files.",(0,r.kt)("br",{parentName:"p"}),"\n","Python is employed for build scripts, post-processing, GUI, and other utilities.  "),(0,r.kt)("h3",{id:"main-components"},"Main Components"),(0,r.kt)("p",null,"Our architecture consists of the following key elements:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A 4-way Router coupled with a local Endpoint.  "),(0,r.kt)("li",{parentName:"ul"},"A 5-stage Mini Core that is RV32I compatible.  "),(0,r.kt)("li",{parentName:"ul"},"A 5-stage Big Core, which is RV32IM CSR compatible and supports MMIO (VGA, UART, FPGA IO, PS2 Keyboard)."),(0,r.kt)("li",{parentName:"ul"},"A Memory Subsystem equipped with L1 Instruction and Data Cache, as well as a Memory Controller.")),(0,r.kt)("h3",{id:"software-stack-to-run-on-soc"},"Software Stack to run on SoC"),(0,r.kt)("p",null,"Our system runs on a simple proprietary RISCV embedded OS-like system and includes:  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A software library for VGA graphical capabilities."),(0,r.kt)("li",{parentName:"ul"},"A software library for accessing the FPGA MMIO and special control registers."),(0,r.kt)("li",{parentName:"ul"},"Software examples demonstrating the utilization of many cores for distributed calculations and parallel computation.")),(0,r.kt)("h2",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"For the best experience, we recommend using a Windows machine running vscode + gitbash.",(0,r.kt)("br",{parentName:"p"}),"\n","Please follow the instructions in the ",(0,r.kt)("a",{parentName:"p",href:"https://fpga-mafia.github.io/fpga_mafia_wiki/docs/TFM/welcome"},"Walkthrough MAFIA")),(0,r.kt)("h2",{id:"prerequisite"},"Prerequisite"),(0,r.kt)("p",null,"Before you start, make sure you have the following tools and software installed:  "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/xpack-dev-tools/riscv-none-embed-gcc-xpack/releases/"},"RISCV gcc releases")," & ",(0,r.kt)("a",{parentName:"li",href:"https://xpack.github.io/riscv-none-embed-gcc/install/"},"install"),",\na Windows gcc for RISCV ISA."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.intel.com/content/www/us/en/software-kit/660907/intel-quartus-prime-lite-edition-design-software-version-20-1-1-for-windows.html"},"Intel design SW for windows"),",\nmodelsim + quartus + MAX10 (de10-lite).",(0,r.kt)("br",{parentName:"li"}),"Used to compile, simulate & load to FPGA the HW systemverilog design.")),(0,r.kt)("h3",{id:"inspiration-behind-the-project"},"Inspiration Behind the Project"),(0,r.kt)("p",null,"This project draws inspiration from innovative players in the field of computing.",(0,r.kt)("br",{parentName:"p"}),"\n","These include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.bsg.ai/"},"HammerBlade Manycore:Bespoke Silicon Group")," | ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=gTM7Tc5DCA8"},"Watch the video on Youtube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.tesla.com/AI"},"Tesla: DOJO")," | ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=DSw3IwsgNnc"},"Watch the video on Youtube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://tenstorrent.com/"},"Tenstorrent: Wormhole & more")," | ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=32CRYenTcdw"},"Watch the video on Youtube")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.esperanto.ai/"},"Esperanto: ET-SoC-1")," | ",(0,r.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=5foT3huJ_Gg"},"Watch the video on Youtube"))),(0,r.kt)("h2",{id:"stay-tuned-for-updates"},"Stay Tuned for Updates!"),(0,r.kt)("p",null,"Thank You for Your Interest in the MAFIA Project!"))}p.isMDXComponent=!0},9335:(e,t,a)=>{a.r(t),a.d(t,{default:()=>h});var n=a(7294),r=a(6010),i=a(7961),l=a(2263);const o={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN"};var c=a(7462);const s={features:"features_xdhU",featureSvg:"featureSvg__8YW"},u=[];function p(e){let{Svg:t,title:a,description:i}=e;return n.createElement("div",{className:(0,r.Z)("col col--4")},n.createElement("div",{className:"text--center"},n.createElement(t,{className:s.featureSvg,alt:a})),n.createElement("div",{className:"text--center padding-horiz--md"},n.createElement("h3",null,a),n.createElement("p",null,i)))}function m(){return n.createElement("section",{className:s.features},n.createElement("div",{className:"container"},n.createElement("div",{className:"row"},u.map(((e,t)=>n.createElement(p,(0,c.Z)({key:t},e)))))))}var d=a(8638);function f(){const{siteConfig:e}=(0,l.Z)();return n.createElement("header",{className:(0,r.Z)("hero hero--primary",o.heroBanner),style:{backgroundColor:"#6E6E6E"}},n.createElement("div",{className:"container"},n.createElement("h1",{className:"hero__title"},e.title),n.createElement("p",{className:"hero__subtitle"},e.tagline),n.createElement("div",{style:{textAlign:"center"}},n.createElement("a",{href:"https://github.com/amichai-bd/fpga_mafia/actions/workflows/mafia_sanity.yml"},n.createElement("img",{src:"https://github.com/amichai-bd/fpga_mafia/actions/workflows/mafia_sanity.yml/badge.svg",alt:"mafia_sanity badge"}))),n.createElement("div",{className:"container",style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},n.createElement("div",{align:"left"},n.createElement("h3",null,n.createElement("strong",null,"Current Development Status:")),n.createElement("p",null,"This project is currently a work in progress",n.createElement("br",null)," We are in the process of enabling and integrating individual IPs",n.createElement("br",null)," Our team is working diligently to deliver a fully functional fabric by May, 2024.")))))}function h(){const{siteConfig:e}=(0,l.Z)();return n.createElement(i.Z,{title:`Hello from ${e.title}`,description:"mafia fpga, RISCV mesh, many core"},n.createElement(f,null),n.createElement("main",null,n.createElement("br",null),n.createElement("div",{className:"container"},n.createElement(d.default,null)),n.createElement(m,null)))}}}]);