{
  "pluginId": "default",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "Hello": [
      {
        "type": "link",
        "label": "Hello",
        "href": "/fpga_mafia_wiki/docs/intro",
        "docId": "intro"
      }
    ],
    "HowTo": [
      {
        "type": "link",
        "label": "GitHub Action",
        "href": "/fpga_mafia_wiki/docs/how_to/github_action",
        "docId": "how_to/github_action"
      },
      {
        "type": "link",
        "label": "How to GIT",
        "href": "/fpga_mafia_wiki/docs/how_to/HOW_TO_GIT",
        "docId": "how_to/HOW_TO_GIT"
      },
      {
        "type": "link",
        "label": "Getting started tool chain tutorial",
        "href": "/fpga_mafia_wiki/docs/how_to/Getting_started_tool_chain_tutorial",
        "docId": "how_to/Getting_started_tool_chain_tutorial"
      },
      {
        "type": "category",
        "label": "System Verilog",
        "items": [
          {
            "type": "link",
            "label": "Intro to System-Verilog",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/Intro_vlg",
            "docId": "how_to/verilog/Intro_vlg"
          },
          {
            "type": "link",
            "label": "Blocking vs Non-Blocking assignment",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg1",
            "docId": "how_to/verilog/vlg1"
          },
          {
            "type": "link",
            "label": "Multiple dimensional arrays",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg2",
            "docId": "how_to/verilog/vlg2"
          },
          {
            "type": "link",
            "label": "Coding Style",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg3",
            "docId": "how_to/verilog/vlg3"
          },
          {
            "type": "link",
            "label": "System-Verilog Features",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg4",
            "docId": "how_to/verilog/vlg4"
          },
          {
            "type": "link",
            "label": "Module, Function, Macro",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg5",
            "docId": "how_to/verilog/vlg5"
          },
          {
            "type": "link",
            "label": "Common examples",
            "href": "/fpga_mafia_wiki/docs/how_to/verilog/vlg6",
            "docId": "how_to/verilog/vlg6"
          }
        ],
        "collapsed": true,
        "collapsible": true,
        "href": "/fpga_mafia_wiki/docs/how_to/verilog/Intro_vlg"
      }
    ],
    "Cache": [
      {
        "type": "link",
        "label": "Intro",
        "href": "/fpga_mafia_wiki/docs/cache/cache_intro",
        "docId": "cache/cache_intro"
      },
      {
        "type": "link",
        "label": "Overview",
        "href": "/fpga_mafia_wiki/docs/cache/cache_overview",
        "docId": "cache/cache_overview"
      },
      {
        "type": "link",
        "label": "High level block description",
        "href": "/fpga_mafia_wiki/docs/cache/High_level_block_description",
        "docId": "cache/High_level_block_description"
      },
      {
        "type": "link",
        "label": "High level Transaction Flows",
        "href": "/fpga_mafia_wiki/docs/cache/High_level_Transaction_Flows",
        "docId": "cache/High_level_Transaction_Flows"
      },
      {
        "type": "link",
        "label": "Merge Buffer Behavior",
        "href": "/fpga_mafia_wiki/docs/cache/Merge_Buffer_Behavior",
        "docId": "cache/Merge_Buffer_Behavior"
      },
      {
        "type": "link",
        "label": "Verification",
        "href": "/fpga_mafia_wiki/docs/cache/Verification",
        "docId": "cache/Verification"
      },
      {
        "type": "link",
        "label": "Assumption & Assertions",
        "href": "/fpga_mafia_wiki/docs/cache/Assumption_Assertions",
        "docId": "cache/Assumption_Assertions"
      },
      {
        "type": "link",
        "label": "Appendix",
        "href": "/fpga_mafia_wiki/docs/cache/Appendix",
        "docId": "cache/Appendix"
      },
      {
        "type": "link",
        "label": "ABD Notes",
        "href": "/fpga_mafia_wiki/docs/cache/ABD_notes",
        "docId": "cache/ABD_notes"
      }
    ]
  },
  "docs": {
    "cache/ABD_notes": {
      "id": "cache/ABD_notes",
      "title": "ABD Notes:",
      "description": "I gave some thought in to how to resolve the back2back request and this is what I produced:",
      "sidebar": "Cache"
    },
    "cache/Appendix": {
      "id": "cache/Appendix",
      "title": "Appendix",
      "description": "Future Features",
      "sidebar": "Cache"
    },
    "cache/Assumption_Assertions": {
      "id": "cache/Assumption_Assertions",
      "title": "Assumption & Assertions",
      "description": "Core Interface Assumption:",
      "sidebar": "Cache"
    },
    "cache/cache_intro": {
      "id": "cache/cache_intro",
      "title": "",
      "description": "Noam Sabban",
      "sidebar": "Cache"
    },
    "cache/cache_overview": {
      "id": "cache/cache_overview",
      "title": "Overview",
      "description": "This HAS (High-Level-Architecture-Specification) will describe the Cache DUT",
      "sidebar": "Cache"
    },
    "cache/High_level_block_description": {
      "id": "cache/High_level_block_description",
      "title": "High Level Block Description",
      "description": "Transaction Queue (TQ)",
      "sidebar": "Cache"
    },
    "cache/High_level_Transaction_Flows": {
      "id": "cache/High_level_Transaction_Flows",
      "title": "High level Transaction Flows",
      "description": "In this chapter will describe the high-level transaction Flow.",
      "sidebar": "Cache"
    },
    "cache/Merge_Buffer_Behavior": {
      "id": "cache/Merge_Buffer_Behavior",
      "title": "Merge Buffer Behavior",
      "description": "In this chapter we will explain the Merge Buffer behavior through different cases",
      "sidebar": "Cache"
    },
    "cache/Verification": {
      "id": "cache/Verification",
      "title": "Verification",
      "description": "In this section we will write a list of scenarios and points we want to cover",
      "sidebar": "Cache"
    },
    "how_to/Getting_started_tool_chain_tutorial": {
      "id": "how_to/Getting_started_tool_chain_tutorial",
      "title": "Welcome to tool-chain tutorial!!",
      "description": "Download a text editor",
      "sidebar": "HowTo"
    },
    "how_to/github_action": {
      "id": "how_to/github_action",
      "title": "",
      "description": "setting your personal PC as a server to run sanity action - gate keeper for Submit",
      "sidebar": "HowTo"
    },
    "how_to/HOW_TO": {
      "id": "how_to/HOW_TO",
      "title": "Welcome to tool-chain tutorial!!",
      "description": "Download a text editor"
    },
    "how_to/HOW_TO_GIT": {
      "id": "how_to/HOW_TO_GIT",
      "title": "Motivation",
      "description": "Git is a version control system allowing developers to track and manage changes to their codebase over time. Using Git offers several benefits:",
      "sidebar": "HowTo"
    },
    "how_to/System-Verilog": {
      "id": "how_to/System-Verilog",
      "title": "Intro to System-Verilog",
      "description": "System-Verilog vs Verilog"
    },
    "how_to/verilog/Intro_vlg": {
      "id": "how_to/verilog/Intro_vlg",
      "title": "Intro to System-Verilog",
      "description": "System-Verilog vs Verilog",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg1": {
      "id": "how_to/verilog/vlg1",
      "title": "Blocking vs Non-Blocking assignment",
      "description": "The main difference between these two types of assignments is how they are executed in relation to the rest of the code in a design.",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg2": {
      "id": "how_to/verilog/vlg2",
      "title": "Multiple dimensional arrays",
      "description": "Packed vs Unpacked",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg3": {
      "id": "how_to/verilog/vlg3",
      "title": "Coding Style",
      "description": "Signal declaration",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg4": {
      "id": "how_to/verilog/vlg4",
      "title": "System-Verilog Features",
      "description": "`include",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg5": {
      "id": "how_to/verilog/vlg5",
      "title": "Module, Function, Macro",
      "description": "In system verilog, there are multiple ways to define a block of code that can be reused.",
      "sidebar": "HowTo"
    },
    "how_to/verilog/vlg6": {
      "id": "how_to/verilog/vlg6",
      "title": "Common examples",
      "description": "Mux",
      "sidebar": "HowTo"
    },
    "intro": {
      "id": "intro",
      "title": "Tutorial Intro",
      "description": "Let's discover Docusaurus in less than 5 minutes.",
      "sidebar": "Hello"
    }
  }
}