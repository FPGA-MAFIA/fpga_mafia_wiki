"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[1452],{3905:(t,e,a)=>{a.d(e,{Zo:()=>m,kt:()=>N});var r=a(7294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),o=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=o(t.components);return r.createElement(p.Provider,{value:e},t.children)},c="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,m=d(t,["components","mdxType","originalType","parentName"]),c=o(a),s=n,N=c["".concat(p,".").concat(s)]||c[s]||k[s]||l;return a?r.createElement(N,i(i({ref:e},m),{},{components:a})):r.createElement(N,i({ref:e},m))}));function N(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=s;var d={};for(var p in e)hasOwnProperty.call(e,p)&&(d[p]=e[p]);d.originalType=t,d[c]="string"==typeof t?t:n,i[1]=d;for(var o=2;o<l;o++)i[o]=a[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}s.displayName="MDXCreateElement"},1939:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>l,metadata:()=>d,toc:()=>o});var r=a(7462),n=(a(7294),a(3905));const l={},i="Overview",d={unversionedId:"cache/cache_overview",id:"cache/cache_overview",title:"Overview",description:"This HAS (High-Level-Architecture-Specification) will describe the Cache DUT",source:"@site/docs/cache/cache_overview.md",sourceDirName:"cache",slug:"/cache/cache_overview",permalink:"/fpga_mafia_doc/docs/cache/cache_overview",draft:!1,editUrl:"https://github.com/noamsabb/fpga_mafia_doc/tree/main/docs/cache/cache_overview.md",tags:[],version:"current",frontMatter:{},sidebar:"Cache",previous:{title:"",permalink:"/fpga_mafia_doc/docs/cache/cache_intro"},next:{title:"5. High Level Block Description",permalink:"/fpga_mafia_doc/docs/cache/High_level_block_description"}},p={},o=[{value:"Top Level Cache diagram",id:"section-4-1",level:2},{value:"Cache Parameters",id:"section-4-2",level:2},{value:"Cache Size &amp; Address bits",id:"section-4-3",level:2},{value:"Tag Array structure",id:"tag-array-structure",level:3},{value:"Cache Data Array structure",id:"cache-data-array-structure",level:3},{value:"Top-Level-Interface",id:"section-4-4",level:2},{value:"Core Interface",id:"section-4-5",level:2},{value:"FM Interface",id:"section-4-6",level:2},{value:"Pipe Interface",id:"section-4-7",level:2}],m={toc:o},c="wrapper";function k(t){let{components:e,...a}=t;return(0,n.kt)(c,(0,r.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,"This HAS (High-Level-Architecture-Specification) will describe the Cache ",(0,n.kt)("a",{name:"_int_ep1dzelp"}),"DUT\nThe cache is a 4-way associative, 16KB Cache.\nThe Cache structure:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Transaction Queue (TQ)")," \u2013 allocates entries for each read/write transaction.\nManage the requests life cycle until it completes in an FSM."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Pipe")," \u2013 manages the tag array lookup (LU) & Cache access."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Tag Array")," \u2013 memory structure that holds the tag information. (Tag, valid, modified, mru, fill)\nAccessible by reading the full set. {SET} as the LU address. ",(0,n.kt)("sup",{parentName:"li",id:"fnref-1"},(0,n.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Data Cache Array")," \u2013 memory structure that holds the Cache Data.\nAccessible using the by reading single CL. {WAY, SET} as the Address",(0,n.kt)("sup",{parentName:"li",id:"fnref-2"},(0,n.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")))),(0,n.kt)("p",null,"In abstract view, the cache neighboring blocks:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Core - sends read/write requests."),(0,n.kt)("li",{parentName:"ul"},"Far Memory (FM) \u2013 Cache read misses & modified write back (WB) for \u201cdirty evict",(0,n.kt)("a",{name:"_int_whspgelr"}),"\u201d.")),(0,n.kt)("h2",{id:"section-4-1"},"Top Level Cache diagram"),(0,n.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,n.kt)("img",{alt:"Image Alt Text",src:"/img/Fig1.png"})),(0,n.kt)("p",{align:"center"},"Figure 1 - Top Level DC_CACHE Diagram"),(0,n.kt)("h2",{id:"section-4-2"},"Cache Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"th"},"Parameters")),(0,n.kt)("th",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"th"},"Value")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"NUM","_","TQ","_","ENTRY")),(0,n.kt)("td",{parentName:"tr",align:"center"},"8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"WORD","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"32")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"NUM","_","WORDS","_","IN","_","CL")),(0,n.kt)("td",{parentName:"tr",align:"center"},"4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"CL","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"128 (WORD","_","WIDTH x NUM","_","WORDS","_","IN","_","CL)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"OFFSET","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"4 (CL","_","WIDTH = 16 Bytes)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"SET","_","ADRS","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"8 (address ","[11:4]",")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"TAG","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"8 (address ","[19:12]",")")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"ADDRESS","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"20 (OFFSET","_","WIDTH + SET","_","ADRS","_","WIDTH + TAG","_","WIDTH)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"CL","_","ADRS","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"16 (SET","_","ADRS","_","WIDTH + TAG","_","WIDTH)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"NUM","_","WAYS")),(0,n.kt)("td",{parentName:"tr",align:"center"},"4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"TAG","_","INDICATION")),(0,n.kt)("td",{parentName:"tr",align:"center"},"(Valid + Modified + MRU)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"REQ","_","ID","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"8 (Up to 255 requests can be served out-of-order) The REQ","_","ID is assigned a value according to order with wrap-around.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},(0,n.kt)("strong",{parentName:"td"},"TQ","_","ID","_","WIDTH")),(0,n.kt)("td",{parentName:"tr",align:"center"},"3 (Up to 8 TQ entries, outstanding FM READ requests)")))),(0,n.kt)("p",{align:"center"}," Table 2- cache parameters"),(0,n.kt)("h2",{id:"section-4-3"},"Cache Size & Address bits"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Address Size:"),"\nAddress ","[19:0]"," = {tag ","[7:0]",", set ","[7:0]",", offset ","[3:0]","};"),(0,n.kt)("h3",{id:"tag-array-structure"},"Tag Array structure"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Tag Array Size:"),"\n(#SET) x (NUM","_","WAYS) x (TAG","_","WIDTH)\n256x4x8 = 8192 bit = 1024 Byte = 2^10 ",(0,n.kt)("strong",{parentName:"p"},"= 1024 Byte of \u201cTAG\u201d")),(0,n.kt)("p",null,"(#SET) x (NUM","_","WAYS) x (TAG","_","INDICATION)\n256x4x4 = 4096 bits = 512 Byte = 2^9 = ",(0,n.kt)("strong",{parentName:"p"},"512 Byte of \u201cTAG","_","INDICATION\u201d")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Total Tag Array size:")," (tags + indications))**\n1024+512 = 1536 Byte -> 1.5KB"),(0,n.kt)("h3",{id:"cache-data-array-structure"},"Cache Data Array structure"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Cache Line Size:"),"\nCL ","[127:0]"," = {word3","[31:0]",", word2","[31:0]",", word1","[31:0]",", word0","[31:0]","}. "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Data Cache Array Size:"),"\n(#SET) x (NUM","_","WAYS) x (CL","_","WIDTH)\n256x4x128 = 131072 bit = 16384 Byte = 2^14 = ",(0,n.kt)("strong",{parentName:"p"},"16KB of Cache Data")),(0,n.kt)("div",{style:{display:"flex",justifyContent:"center"}},(0,n.kt)("img",{alt:"Image Alt Text",src:"/img/Fig2-3.png"})),(0,n.kt)("h2",{id:"section-4-4"},"Top-Level-Interface"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"th"},"Adhoc interface")))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"input \xa0 logic \xa0 \xa0 \xa0 clk,")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"input \xa0 logic \xa0 \xa0 \xa0 rst,")))),(0,n.kt)("h2",{id:"section-4-5"},"Core Interface"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"th"},"Output stall")),(0,n.kt)("th",{parentName:"tr",align:"left"}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic  stall,"),(0,n.kt)("td",{parentName:"tr",align:"left"},"TQ is full, cannot accept new request")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"input core2cache","_","req")),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic \xa0 \xa0 \xa0  \xa0valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","req","_","id      req","_","id;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","opcode \xa0 \xa0  opcode;"),(0,n.kt)("td",{parentName:"tr",align:"left"},"RD","_","OP & WR","_","OP")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","address \xa0  \xa0address;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","word \xa0 \xa0 \xa0 \xa0data;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"output cache2core","_","rsp")),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic \xa0 \xa0 \xa0 \xa0valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","adress     address;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","word \xa0 \xa0 \xa0 data;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","req","_","id     req","_","id;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"}),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h2",{id:"section-4-6"},"FM Interface"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"th"},"output  cache2fm","_","req","_","q3")),(0,n.kt)("th",{parentName:"tr",align:"left"}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic \xa0 \xa0   \xa0   valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","tq","_","id         tq","_","id\xa0;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","address \xa0     address;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","cl\xa0 \xa0  \xa0      data;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","fm","_","req","_","op     opcode\xa0;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"input fm2cache","_","rd","_","rsp")," \xa0 \xa0"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic \xa0 \xa0 \xa0 valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","tq","_","id \xa0 \xa0 tq","_","id;"),(0,n.kt)("td",{parentName:"tr",align:"left"},"// must match the original rd","_","req tq","_","id")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","cl \xa0 \xa0 \xa0 \xa0data;"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("h2",{id:"section-4-7"},"Pipe Interface"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"th"},"output  pipe","_","lu","_","req","_","q1")),(0,n.kt)("th",{parentName:"tr",align:"left"}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic \xa0 \xa0   \xa0    valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","lu","_","opcode      lu","_","op\xa0;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","tq","_","id          tq","_","id;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","address        address;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","cl             cl","_","data"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","word           data"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"input pipe","_","lu","_","rsp","_","q3")),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"logic            valid;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","lu","_","result      lu","_","result;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","lu","_","opcode      lu","_","opcode;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","tq","_","id          tq","_","id;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","cl             data;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"// t","_","offset      offset;"),(0,n.kt)("td",{parentName:"tr",align:"left"})),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"t","_","address        address;"),(0,n.kt)("td",{parentName:"tr",align:"left"})))),(0,n.kt)("div",{className:"footnotes"},(0,n.kt)("hr",{parentName:"div"}),(0,n.kt)("ol",{parentName:"div"},(0,n.kt)("li",{parentName:"ol",id:"fn-1"},"When accessing the tag array, we read/write full set, which has 4 ways. Each with Tag + indication.",(0,n.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,n.kt)("li",{parentName:"ol",id:"fn-2"},"When accessing the Data cache array, we read/write single CL \u2013 which is a single way in the Set.",(0,n.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}k.isMDXComponent=!0}}]);