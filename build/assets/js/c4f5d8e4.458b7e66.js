"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[4195],{9335:(e,t,l)=>{l.r(t),l.d(t,{default:()=>E});var n=l(7294),a=l(6010),r=l(7961),c=(l(9960),l(2263));const i={heroBanner:"heroBanner_qdFl",buttons:"buttons_AeoN"};var o=l(7462);const s={features:"features_xdhU",featureSvg:"featureSvg__8YW"},m=[];function u(e){let{Svg:t,title:l,description:r}=e;return n.createElement("div",{className:(0,a.Z)("col col--4")},n.createElement("div",{className:"text--center"},n.createElement(t,{className:s.featureSvg,alt:l})),n.createElement("div",{className:"text--center padding-horiz--md"},n.createElement("h3",null,l),n.createElement("p",null,r)))}function h(){return n.createElement("section",{className:s.features},n.createElement("div",{className:"container"},n.createElement("div",{className:"row"},m.map(((e,t)=>n.createElement(u,(0,o.Z)({key:t},e)))))))}function d(){const{siteConfig:e}=(0,c.Z)();return n.createElement("header",{className:(0,a.Z)("hero hero--primary",i.heroBanner),style:{backgroundColor:"#6E6E6E"}},n.createElement("div",{className:"container"},n.createElement("h1",{className:"hero__title"},e.title),n.createElement("p",{className:"hero__subtitle"},e.tagline),n.createElement("div",{style:{textAlign:"center"}},n.createElement("a",{href:"https://github.com/amichai-bd/fpga_mafia/actions/workflows/mafia_sanity.yml"},n.createElement("img",{src:"https://github.com/amichai-bd/fpga_mafia/actions/workflows/mafia_sanity.yml/badge.svg",alt:"mafia_sanity badge"}))),n.createElement("div",{className:"container",style:{display:"flex",justifyContent:"space-between",alignItems:"center"}},n.createElement("div",{align:"left"},n.createElement("h3",null,"Contributors:"),n.createElement("a",{href:"https://github.com/amichai-bd",target:"_blank"},"Amichai Ben David"),n.createElement("br",null),n.createElement("a",{href:"https://github.com/danielk532",target:"_blank"},"Daniel Kaufman"),n.createElement("br",null),n.createElement("a",{href:"https://github.com/noamsabb",target:"_blank"},"Noam Sabban"),n.createElement("br",null),n.createElement("a",{href:"https://github.com/ShmuelSfez",target:"_blank"},"Shmuel Sfez"),n.createElement("br",null),n.createElement("a",{href:"https://github.com/yeonatanPerelman",target:"_blank"},"Yeonatan Perelman")),n.createElement("div",null,n.createElement("h3",null,n.createElement("strong",null,"Current Development Status:")),n.createElement("p",null,"This project is currently a work in progress (WIP).",n.createElement("br",null)," We are in the process of enabling and integrating individual IPs.",n.createElement("br",null),n.createElement("br",null),"Our team is working diligently to deliver a fully functional fabric by August 1, 2023.")))))}function E(){const{siteConfig:e}=(0,c.Z)();return n.createElement(r.Z,{title:`Hello from ${e.title}`,description:"Description will go into a meta tag in <head />"},n.createElement(d,null),n.createElement("main",null,n.createElement("br",null),n.createElement("br",null),n.createElement("div",{className:"container"},n.createElement("h2",null,"Welcome to the MAFIA Project"),n.createElement("p",null,"A initiative aimed at designing a System-on-a-Chip (SoC) Tile-based mesh fabric. Our architecture is designed to be highly versatile, capable of incorporating a variety of functionalities."),n.createElement("h2",null,"Functionality includes"),n.createElement("ul",null,n.createElement("li",null,"RISCV mini-cores and big-cores"),n.createElement("li",null,"Hardware accelerators"),n.createElement("li",null,"IO devices such as UART, keyboard, VGA, and DE10-Lite FPGA IO")),n.createElement("h2",null,"Project Overview"),n.createElement("p",null,"The MAFIA Project is developed by final year Electrical and Computer Engineering students at Bar-Ilan University and the Technion in Israel."),n.createElement("h2",null,"Key Features"),n.createElement("ul",null,n.createElement("li",null,"Acceleration of distributed workloads, particularly beneficial for AI inference and learning."),n.createElement("li",null,"Traditional program acceleration by utilizing a pipelining approach."),n.createElement("li",null,"This SoC design provides a robust platform for versatile tasks, offering improved speed and efficiency")),n.createElement("h3",null,"Technology Stack"),n.createElement("p",null,"The project's RTL is written in SystemVerilog. We utilize the GNU GCC for the RISCV software stack, which includes linker, assembly, and C source files. Python is employed for build scripts, post-processing, GUI, and other utilities."),n.createElement("h3",null,"Main Components"),n.createElement("p",null,"Our architecture consists of the following key elements:"),n.createElement("ul",null,n.createElement("li",null,"A 4-way Router coupled with a local Endpoint."),n.createElement("li",null,"A 3-stage Mini Core that is RV32I compatible."),n.createElement("li",null,"A 7-stage Big Core, which is RV32IM CSR compatible and supports MMIO (VGA, UART, FPGA IO, PS2 Keyboard)."),n.createElement("li",null,"A Memory Subsystem equipped with L1 Instruction and Data Cache, as well as a Memory Controller.")),n.createElement("h3",null,"Software Stack to run on SoC"),n.createElement("p",null,"Our system runs on a simple proprietary RISCV embedded OS like system and includes:"),n.createElement("ul",null,n.createElement("li",null,"A software library for VGA graphical capabilities."),n.createElement("li",null,"A software library for accessing the FPGA MMIO and special control registers."),n.createElement("li",null,"Software examples demonstrating the utilization of many cores for distributed calculations and parallel computation.")),n.createElement("br",null),n.createElement("div",{style:{textAlign:"center"}},n.createElement("img",{src:"https://user-images.githubusercontent.com/81047407/218485725-d4442e94-7129-48b9-92bb-8f2ce52a301c.png",alt:"Project Image",width:"650"})),n.createElement("br",null),n.createElement("h2",null,"Getting Started"),n.createElement("p",null,"For the best experience, we recommend using a Windows machine running vscode + gitbash. To see the build and run options, use the following command:"),n.createElement("pre",null,n.createElement("code",null,"python build.py -h")),n.createElement("h2",null,"Prerequisite"),n.createElement("p",null,"Before you start, make sure you have the following tools and software installed:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("a",{href:"https://github.com/xpack-dev-tools/riscv-none-embed-gcc-xpack/releases/"},"RISCV gcc releases")," & ",n.createElement("a",{href:"https://xpack.github.io/riscv-none-embed-gcc/install/"},"install"),", a Windows gcc for RISCV ISA."),n.createElement("li",null,n.createElement("a",{href:"https://www.intel.com/content/www/us/en/software-kit/660907/intel-quartus-prime-lite-edition-design-software-version-20-1-1-for-windows.html"},"Intel design SW for windows"),", modelsim + quartus + MAX10 (de10-lite). used to compile, simulate & load to FPGA the HW systemverilog design.")),n.createElement("h3",null,"Inspiration Behind the Project"),n.createElement("p",null,"This project draws inspiration from innovative players in the field of computing. These include:"),n.createElement("ul",null,n.createElement("li",null,n.createElement("a",{href:"https://www.bsg.ai/"},"HammerBlade Manycore:Bespoke Silicon Group")," | ",n.createElement("a",{href:"https://www.youtube.com/watch?v=gTM7Tc5DCA8"},"Watch the video on Youtube")),n.createElement("li",null,n.createElement("a",{href:"https://www.tesla.com/AI"},"Tesla: DOJO")," | ",n.createElement("a",{href:"https://www.youtube.com/watch?v=DSw3IwsgNnc"},"Watch the video on Youtube")),n.createElement("li",null,n.createElement("a",{href:"https://tenstorrent.com/"},"Tenstorrent: Wormhole & more")," | ",n.createElement("a",{href:"https://www.youtube.com/watch?v=32CRYenTcdw"},"Watch the video on Youtube")),n.createElement("li",null,n.createElement("a",{href:"https://www.esperanto.ai/"},"Esperanto: ET-SoC-1")," | ",n.createElement("a",{href:"https://www.youtube.com/watch?v=5foT3huJ_Gg"},"Watch the video on Youtube"))),n.createElement("h3",null,"Troubleshooting Common Issues"),n.createElement("p",null,"'ModuleNotFoundError: No module named 'termcolor''"),n.createElement("pre",null,n.createElement("code",null,"pip install termcolor")),n.createElement("h3",null,"Troubleshooting Common Issues"),n.createElement("p",null,"Issue: 'riscv-none-embed-gcc.exe' is not recognized as an internal or external command"),n.createElement("p",null,n.createElement("strong",null,"Solution:")," Add the following line to your ~/.bashrc file:"),n.createElement("pre",null,n.createElement("code",null,"export PATH=$PATH:/c/Users/'user_name'/AppData/Roaming/xPacks/riscv-none-embed-gcc/xpack-riscv-none-embed-gcc-10.2.0-1.2/bin")),n.createElement("p",null,"Then, reload the bashrc file with this command:"),n.createElement("pre",null,n.createElement("code",null,"source ~/.bashrc")),n.createElement("h3",null,"Quick Access Commands"),n.createElement("p",null,"For easy access, you can run the following commands in the GitBash shell for Windows:"),n.createElement("pre",null,n.createElement("code",null,"./build.py -h")),n.createElement("pre",null,n.createElement("code",null,"./build.py -dut big_core -tests alive -app -hw -sim")),n.createElement("pre",null,n.createElement("code",null,"./build.py -dut cache -tests cache_alive -hw -sim -pp")),n.createElement("pre",null,n.createElement("code",null,"./build.py -dut sc_core -tests alive -full_run")),n.createElement("h2",null,"Stay Tuned for Updates!"),n.createElement("p",null,"Thank You for Your Interest in the MAFIA Project!")),n.createElement(h,null)))}}}]);